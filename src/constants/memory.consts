// Values taken from xv6

// Memory layout

EXTMEM  0x100000            // Start of extended memory
PHYSTOP 0xE000000           // Top physical memory
DEVSPACE 0xFE000000         // Other devices are at high addresses

// Key addresses for address space layout (see kmap in vm.c for layout)
KERNBASE 0x80000000         // First kernel virtual address
KERNLINK (KERNBASE+EXTMEM)  // Address where kernel is linked

// x86 memory management unit (MMU).

FL_CF           0x00000001      // Carry Flag
FL_PF           0x00000004      // Parity Flag
FL_AF           0x00000010      // Auxiliary carry Flag
FL_ZF           0x00000040      // Zero Flag
FL_SF           0x00000080      // Sign Flag
FL_TF           0x00000100      // Trap Flag
FL_IF           0x00000200      // Interrupt Enable
FL_DF           0x00000400      // Direction Flag
FL_OF           0x00000800      // Overflow Flag
FL_IOPL_MASK    0x00003000      // I/O Privilege Level bitmask
FL_IOPL_0       0x00000000      //   IOPL == 0
FL_IOPL_1       0x00001000      //   IOPL == 1
FL_IOPL_2       0x00002000      //   IOPL == 2
FL_IOPL_3       0x00003000      //   IOPL == 3
FL_NT           0x00004000      // Nested Task
FL_RF           0x00010000      // Resume Flag
FL_VM           0x00020000      // Virtual 8086 mode
FL_AC           0x00040000      // Alignment Check
FL_VIF          0x00080000      // Virtual Interrupt Flag
FL_VIP          0x00100000      // Virtual Interrupt Pending
FL_ID           0x00200000      // ID flag

// Control Register flags
CR0_PE          0x00000001      // Protection Enable
CR0_MP          0x00000002      // Monitor coProcessor
CR0_EM          0x00000004      // Emulation
CR0_TS          0x00000008      // Task Switched
CR0_ET          0x00000010      // Extension Type
CR0_NE          0x00000020      // Numeric Errror
CR0_WP          0x00010000      // Write Protect
CR0_AM          0x00040000      // Alignment Mask
CR0_NW          0x20000000      // Not Writethrough
CR0_CD          0x40000000      // Cache Disable
CR0_PG          0x80000000      // Paging

CR4_PSE         0x00000010      // Page size extension

SEG_KCODE 1  // kernel code
SEG_KDATA 2  // kernel data+stack
SEG_KCPU  3  // kernel per-cpu data
SEG_UCODE 4  // user code
SEG_UDATA 5  // user data+stack
SEG_TSS   6  // this process's task state

DPL_USER    0x3     // User DPL

// Application segment type bits
STA_X       0x8     // Executable segment
STA_E       0x4     // Expand down (non-executable segments)
STA_C       0x4     // Conforming code segment (executable only)
STA_W       0x2     // Writeable (non-executable segments)
STA_R       0x2     // Readable (executable segments)
STA_A       0x1     // Accessed

// System segment type bits
STS_T16A    0x1     // Available 16-bit TSS
STS_LDT     0x2     // Local Descriptor Table
STS_T16B    0x3     // Busy 16-bit TSS
STS_CG16    0x4     // 16-bit Call Gate
STS_TG      0x5     // Task Gate / Coum Transmitions
STS_IG16    0x6     // 16-bit Interrupt Gate
STS_TG16    0x7     // 16-bit Trap Gate
STS_T32A    0x9     // Available 32-bit TSS
STS_T32B    0xB     // Busy 32-bit TSS
STS_CG32    0xC     // 32-bit Call Gate
STS_IG32    0xE     // 32-bit Interrupt Gate
STS_TG32    0xF     // 32-bit Trap Gate

// Page directory and page table constants.
NPDENTRIES      1024    // # directory entries per page directory
NPTENTRIES      1024    // # PTEs per page table
PGSIZE          4096    // bytes mapped by a page

PGSHIFT         12      // log2(PGSIZE)
PTXSHIFT        12      // offset of PTX in a linear address
PDXSHIFT        22      // offset of PDX in a linear address

// Page table/directory entry flags.
PTE_P           0x001   // Present
PTE_W           0x002   // Writeable
PTE_U           0x004   // User
PTE_PWT         0x008   // Write-Through
PTE_PCD         0x010   // Cache-Disable
PTE_A           0x020   // Accessed
PTE_D           0x040   // Dirty
PTE_PS          0x080   // Page Size
PTE_MBZ         0x180   // Bits must be zero
